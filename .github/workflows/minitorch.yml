name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install graphviz
        python -m pip install --upgrade pip
        pip install flake8 pytest pep8-naming
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 --ignore "N801, E203, E266, E501, W503, F812, F401, F841, E741, N803, N802, N806" minitorch/ tests/ project/
    - name: Test with pytest
      run: |
        echo "basic_math_ops test"
        pytest tests -x -m basic_math_ops
        
        echo "basic_math_properties test"
        pytest tests -x -m basic_math_properties
        
        echo "high_order_fn test"
        pytest tests -x -m high_order_fn
        
        echo "test_module_simple test"
        pytest tests -x -m test_module_simple
        
        echo "scalar test"
        pytest tests -x -m scalar
        
        echo "derivative test"
        pytest tests -x -m derivative
        
        echo "chain_rule test"
        pytest tests -x -m chain_rule
        
        echo "backprop test"
        pytest tests -x -m backprop
        
        echo "tensor_data test"
        pytest tests -x -m tensor_data
        
        echo "tensor_fn test"
        pytest tests -x -m tensor_fn
        
        echo "fast_ops test"
        pytest tests -x -m fast_ops
        
        echo "cuda_ops test"
        pytest tests -x -m cuda_ops
        
        echo "fast_conv test"
        pytest tests -x -m fast_conv
        
        echo "nn_layers test"
        pytest tests -x -m nn_layers
        
        echo "cuda_conv test"
        pytest tests -x -m cuda_conv
